name: Continuous Deployment

on:
  workflow_run:
    workflows: ['Continuous Integration', 'Releases']
    branches:
      - trunk
      - releases/*
    types:
      - completed

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  publish-to-gpr:
    name: Publish to GitHub Packages

    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.name != 'Releases' }}

    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Download packages artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: continuous-integration.yml
          branch: ${{ github.ref }}
          name: packages

      - name: Setup .NET
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 5.0.x
          source-url: https://nuget.pkg.github.com/asiffermann/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish packages to GPR
        run: dotnet nuget push *.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}

  publish-to-nuget:
    name: Publish to NuGet.org

    if: >
      github.event.workflow_run.conclusion == 'success' && (
        contains(github.ref, 'releases') ||
        ( github.event.workflow_run.name == 'Releases' && github.ref == 'refs/heads/trunk' )
      )

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Download packages artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: continuous-integration.yml
          branch: ${{ github.ref }}
          name: packages

      - name: Setup .NET
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 5.0.x
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGETAPIKEY }}

      - name: Publish packages to NuGet.org
        run: dotnet nuget push *.nupkg --skip-duplicate --api-key ${{ secrets.NUGETAPIKEY }}