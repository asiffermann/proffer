name: Continuous Integration

on:
  push:
    branches:
      - trunk
      - releases/*
  pull_request:
    branches:
      - trunk
      - releases/*

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  gitversion:
    name: Calculate SemVer

    runs-on: ubuntu-latest

    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: 5.x

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true
          configFilePath: gitversion.yml

  build:
    name: Build & Package

    needs: gitversion
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup .NET
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 5.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release -p:Version=${{ needs.gitversion.outputs.fullSemVer }}

      - name: Pack
        run: dotnet pack --no-build -c Release -o packages -p:PackageVersion=${{ needs.gitversion.outputs.fullSemVer }} --include-symbols -p:SymbolPackageFormat=snupkg

      - name: Upload packages artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: packages

  test:
    name: Run unit tests

    needs: gitversion
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup .NET
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 5.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release -p:Version=${{ needs.gitversion.outputs.fullSemVer }}

      - name: Install AzCopy
        uses: kheiakiyama/install-azcopy-action@v1.0.3
        with:
          version: v10

      - name: Determine test run filter
        uses: haya14busa/action-cond@v1.0.2
        id: test_run_filter
        with:
          if_true: 'Category=UnitTest|Category=IntegrationTest'
          if_false: 'Category=UnitTest'
          cond: ${{ github.event.sender.login != 'dependabot[bot]' && ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository ) }}

      - name: Test
        run: |
          dotnet test --no-build -c Release \
            --settings coverlet.runsettings \
            --logger "junit;LogFilePath=../../tests-results/{assembly}.junit.xml" \
            --collect "XPlat Code Coverage" \
            --results-directory tests-results \
            --filter "$TEST_FILTER"
        env:
          TEST_FILTER: ${{ steps.test_run_filter.outputs.value }}
          Email:Provider:Parameters:Key: ${{ secrets.SENDGRIDKEY }}
          ConnectionStrings:ConnectionStringFromAppSettings: ${{ secrets.AZURESTORAGETESTSCONNECTIONSTRING }}
          Storage:Providers:CustomConnectionString:ConnectionString: ${{ secrets.AZURESTORAGETESTSCONNECTIONSTRING }}
          Storage:Stores:CustomConnectionString:ConnectionString: ${{ secrets.AZURESTORAGETESTSCONNECTIONSTRING }}
          Storage:ScopedStores:ScopedCustomConnectionString:ConnectionString: ${{ secrets.AZURESTORAGETESTSCONNECTIONSTRING }}
          AzCopy10Command: azcopy_v10

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.8.8

      - name: Merge lcov files
        run: reportgenerator -reports:tests-results/**/*.info -targetdir:tests-results -reporttypes:lcov

      - name: Upload tests results artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tests-results
          path: tests-results
        if: ${{ always() }}

      - name: Publish unit tests results
        uses: EnricoMi/publish-unit-test-result-action@v1.31
        if: >
          always() &&
          github.event.sender.login != 'dependabot[bot]' &&
          ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )
        with:
          files: tests-results/*.junit.xml
          check_name: Unit tests results

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./tests-results/lcov.info
